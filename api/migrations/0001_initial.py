# Generated by Django 3.1.1 on 2020-11-21 14:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('nbr_students', models.IntegerField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=320, null=True)),
                ('password', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'api_school',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('firstname', models.CharField(blank=True, max_length=50, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('class_field', models.CharField(blank=True, db_column='class', max_length=10, null=True)),
                ('school_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.school')),
            ],
            options={
                'db_table': 'api_student',
            },
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('id_transfer', models.AutoField(primary_key=True, serialize=False)),
                ('demand_date', models.DateField(blank=True, null=True)),
                ('transfer_date', models.DateField(blank=True, null=True)),
                ('validation_to', models.IntegerField(blank=True, null=True)),
                ('from_school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfert_from', to='api.school')),
                ('id_student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.student')),
                ('to_school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfert_to', to='api.school')),
            ],
            options={
                'db_table': 'api_transfer',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=20, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('begin_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('payed', models.IntegerField(blank=True, null=True)),
                ('id_school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.school')),
            ],
            options={
                'db_table': 'api_subscription',
            },
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observation', models.TextField(blank=True, null=True)),
                ('teacher', models.CharField(blank=True, max_length=50, null=True)),
                ('action', models.TextField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('time', models.TimeField(blank=True, null=True)),
                ('id_student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.student')),
            ],
            options={
                'db_table': 'api_observation',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('firstname', models.CharField(max_length=255)),
                ('lastname', models.CharField(max_length=255)),
                ('function', models.CharField(blank=True, max_length=25)),
                ('school', models.IntegerField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
                'db_table': 'api_profile',
            },
        ),
    ]
